# -*- coding: utf-8 -*-
"""Production_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13MDRav33JR3tzz2Mmf8nJ5AOvZP-0jhE
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("crop_modified.csv")

from sklearn import tree

model = tree.DecisionTreeRegressor()

data

X = data[["State_Name", "District_Name", "Season","Crop","Area"]]



y = data[["Production"]]

X

categorical_cols = ["State_Name", "District_Name", "Season", "Crop"]

# X_encoded = pd.get_dummies(X, columns=categorical_cols)

from sklearn.preprocessing import LabelEncoder

label_encoders = {}

# Encode categorical columns
for col in categorical_cols:
    label_encoders[col] = LabelEncoder()
    X[col] = label_encoders[col].fit_transform(X[col])

# Display the encoded DataFrame

X

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.18, random_state = 0)

model.fit(X_train,y_train)

y_pred = model.predict(X_test)

y_pred

from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Absolute Error:", mae)
print("Mean Squared Error:", mse)
print("R-squared:", r2)

print(model.predict([[32, 471, 3, 95, 10200]]))

from joblib import dump
dump(model, 'production_prediction_model.joblib')
dump(model, 'production_prediction_model.joblib')
